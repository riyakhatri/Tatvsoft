{"ast":null,"code":"import { Role } from \"./enum\";\nimport cartService from \"../service/cart.service\";\nimport { toast } from \"react-toastify\";\nconst LocalStorageKeys = {\n  USER: \"user\"\n};\nconst addtoCart = async (book, id) => {\n  console.log(book.id);\n  console.log(id);\n  return cartService.add({\n    bookId: book.id,\n    userId: id,\n    quantity: 1\n  }).then(res => {\n    console.log(res);\n    debugger;\n    return {\n      error: false,\n      message: \"Item added in cart\"\n    };\n  }).catch(e => {\n    if (e.status === 500) return {\n      error: true,\n      message: \"Item already in the cart\"\n    };else return {\n      error: true,\n      message: \"something went wrong\"\n    };\n  });\n};\nconst NavigationItems = [{\n  name: \"Users\",\n  route: '/user',\n  access: [Role.Admin, Role.Buyer, Role.Seller]\n}, {\n  name: \"Categories\",\n  route: '/categories',\n  access: [Role.Admin, Role.Buyer, Role.Seller]\n}, {\n  name: \"Books\",\n  route: '/book',\n  access: [Role.Admin, Role.Buyer, Role.Seller]\n}, {\n  name: \"Update Profile\",\n  route: '/updateProfile',\n  access: [Role.Admin, Role.Buyer, Role.Seller]\n}];\nconst hasAccess = (pathname, user) => {\n  const navItem = NavigationItems.find(navItem => pathname.includes(navItem.route));\n  if (navItem) {\n    return !navItem.access || !!(navItem.access && navItem.access.includes(user.RoleId));\n  }\n  return true;\n};\nexport default {\n  hasAccess,\n  NavigationItems,\n  LocalStorageKeys,\n  addtoCart\n};","map":{"version":3,"names":["Role","cartService","toast","LocalStorageKeys","USER","addtoCart","book","id","console","log","add","bookId","userId","quantity","then","res","error","message","catch","e","status","NavigationItems","name","route","access","Admin","Buyer","Seller","hasAccess","pathname","user","navItem","find","includes","RoleId"],"sources":["R:/React/hello-app/Tatvsoft/src/utils/shared.js"],"sourcesContent":["import { Role } from \"./enum\";\r\nimport cartService from \"../service/cart.service\";\r\nimport { toast } from \"react-toastify\";\r\nconst LocalStorageKeys={\r\n    USER:\"user\",\r\n};\r\n const addtoCart = async (book, id) => {\r\n    console.log(book.id);\r\n    console.log(id);\r\n\r\n    return cartService.add({\r\n        bookId: book.id,\r\n        userId: id,\r\n        quantity: 1,\r\n      })\r\n      .then((res) => {\r\n        console.log(res)\r\n        debugger\r\n        return { error: false, message: \"Item added in cart\" };\r\n      })\r\n      .catch((e) => {\r\n        if (e.status === 500)\r\n          return { error: true, message: \"Item already in the cart\" };\r\n        else \r\n        return { error: true, message: \"something went wrong\" };\r\n      });\r\n  };\r\nconst NavigationItems=[\r\n    {\r\n        name:\"Users\",\r\n        route:'/user',\r\n        access:[Role.Admin,Role.Buyer,Role.Seller],\r\n    },\r\n    {\r\n        name:\"Categories\",\r\n        route:'/categories',\r\n        access:[Role.Admin,Role.Buyer,Role.Seller],\r\n    },\r\n    {\r\n        name:\"Books\",\r\n        route:'/book',\r\n        access:[Role.Admin,Role.Buyer,Role.Seller],\r\n    },\r\n    {\r\n        name:\"Update Profile\",\r\n        route:'/updateProfile',\r\n        access:[Role.Admin,Role.Buyer,Role.Seller],\r\n    },\r\n];\r\nconst hasAccess=(pathname,user)=>{\r\n    const navItem=NavigationItems.find((navItem)=>pathname.includes(navItem.route));\r\n    if(navItem){\r\n        return(\r\n            !navItem.access || !!(navItem.access && navItem.access.includes(user.RoleId))\r\n\r\n        );\r\n    }\r\n    return true;\r\n};\r\n\r\nexport default{\r\n    hasAccess,\r\n    NavigationItems,\r\n    LocalStorageKeys,\r\n    addtoCart,\r\n};"],"mappings":"AAAA,SAASA,IAAI,QAAQ,QAAQ;AAC7B,OAAOC,WAAW,MAAM,yBAAyB;AACjD,SAASC,KAAK,QAAQ,gBAAgB;AACtC,MAAMC,gBAAgB,GAAC;EACnBC,IAAI,EAAC;AACT,CAAC;AACA,MAAMC,SAAS,GAAG,MAAAA,CAAOC,IAAI,EAAEC,EAAE,KAAK;EACnCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAACC,EAAE,CAAC;EACpBC,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;EAEf,OAAON,WAAW,CAACS,GAAG,CAAC;IACnBC,MAAM,EAAEL,IAAI,CAACC,EAAE;IACfK,MAAM,EAAEL,EAAE;IACVM,QAAQ,EAAE;EACZ,CAAC,CAAC,CACDC,IAAI,CAAEC,GAAG,IAAK;IACbP,OAAO,CAACC,GAAG,CAACM,GAAG,CAAC;IAChB;IACA,OAAO;MAAEC,KAAK,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAqB,CAAC;EACxD,CAAC,CAAC,CACDC,KAAK,CAAEC,CAAC,IAAK;IACZ,IAAIA,CAAC,CAACC,MAAM,KAAK,GAAG,EAClB,OAAO;MAAEJ,KAAK,EAAE,IAAI;MAAEC,OAAO,EAAE;IAA2B,CAAC,CAAC,KAE9D,OAAO;MAAED,KAAK,EAAE,IAAI;MAAEC,OAAO,EAAE;IAAuB,CAAC;EACzD,CAAC,CAAC;AACN,CAAC;AACH,MAAMI,eAAe,GAAC,CAClB;EACIC,IAAI,EAAC,OAAO;EACZC,KAAK,EAAC,OAAO;EACbC,MAAM,EAAC,CAACxB,IAAI,CAACyB,KAAK,EAACzB,IAAI,CAAC0B,KAAK,EAAC1B,IAAI,CAAC2B,MAAM;AAC7C,CAAC,EACD;EACIL,IAAI,EAAC,YAAY;EACjBC,KAAK,EAAC,aAAa;EACnBC,MAAM,EAAC,CAACxB,IAAI,CAACyB,KAAK,EAACzB,IAAI,CAAC0B,KAAK,EAAC1B,IAAI,CAAC2B,MAAM;AAC7C,CAAC,EACD;EACIL,IAAI,EAAC,OAAO;EACZC,KAAK,EAAC,OAAO;EACbC,MAAM,EAAC,CAACxB,IAAI,CAACyB,KAAK,EAACzB,IAAI,CAAC0B,KAAK,EAAC1B,IAAI,CAAC2B,MAAM;AAC7C,CAAC,EACD;EACIL,IAAI,EAAC,gBAAgB;EACrBC,KAAK,EAAC,gBAAgB;EACtBC,MAAM,EAAC,CAACxB,IAAI,CAACyB,KAAK,EAACzB,IAAI,CAAC0B,KAAK,EAAC1B,IAAI,CAAC2B,MAAM;AAC7C,CAAC,CACJ;AACD,MAAMC,SAAS,GAACA,CAACC,QAAQ,EAACC,IAAI,KAAG;EAC7B,MAAMC,OAAO,GAACV,eAAe,CAACW,IAAI,CAAED,OAAO,IAAGF,QAAQ,CAACI,QAAQ,CAACF,OAAO,CAACR,KAAK,CAAC,CAAC;EAC/E,IAAGQ,OAAO,EAAC;IACP,OACI,CAACA,OAAO,CAACP,MAAM,IAAI,CAAC,EAAEO,OAAO,CAACP,MAAM,IAAIO,OAAO,CAACP,MAAM,CAACS,QAAQ,CAACH,IAAI,CAACI,MAAM,CAAC,CAAC;EAGrF;EACA,OAAO,IAAI;AACf,CAAC;AAED,eAAc;EACVN,SAAS;EACTP,eAAe;EACflB,gBAAgB;EAChBE;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}