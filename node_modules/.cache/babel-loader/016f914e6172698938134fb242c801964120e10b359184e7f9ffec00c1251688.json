{"ast":null,"code":"var _jsxFileName = \"R:\\\\React\\\\hello-app\\\\Tatvsoft\\\\src\\\\pages\\\\Register.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { Button, TextField } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  email: yup.string('Enter your email').email('Enter a valid email').required('Email is required'),\n  password: yup.string('Enter your password').min(8, 'Password should be of minimum 8 characters length').required('Password is required')\n});\nconst Register = () => {\n  _s();\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      firstname: \"\",\n      lastname: \"\"\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        id: \"firstname\",\n        name: \"firstname\",\n        label: \"firstname\",\n        value: formik.values.firstname,\n        onChange: formik.handleChange,\n        error: formik.touched.email && Boolean(formik.errors.email),\n        helperText: formik.touched.email && formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        id: \"lastname\",\n        name: \"lastname\",\n        label: \"lastname\",\n        value: formik.values.lastname,\n        onChange: formik.handleChange,\n        error: formik.touched.email && Boolean(formik.errors.email),\n        helperText: formik.touched.email && formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        id: \"password\",\n        name: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        value: formik.values.password,\n        onChange: formik.handleChange,\n        error: formik.touched.password && Boolean(formik.errors.password),\n        helperText: formik.touched.password && formik.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"contained\",\n        fullWidth: true,\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","ReactDOM","useFormik","yup","Button","TextField","jsxDEV","_jsxDEV","validationSchema","object","email","string","required","password","min","Register","_s","formik","initialValues","firstname","lastname","onSubmit","values","alert","JSON","stringify","children","handleSubmit","fullWidth","id","name","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","fileName","_jsxFileName","lineNumber","columnNumber","type","color","variant","_c","$RefreshReg$"],"sources":["R:/React/hello-app/Tatvsoft/src/pages/Register.jsx"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { Button,TextField } from '@mui/material';\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string('Enter your email')\r\n    .email('Enter a valid email')\r\n    .required('Email is required'),\r\n  password: yup\r\n    .string('Enter your password')\r\n    .min(8, 'Password should be of minimum 8 characters length')\r\n    .required('Password is required'),\r\n});\r\n\r\nconst Register = () => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n      firstname:\"\",\r\n      lastname:\"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      alert(JSON.stringify(values, null, 2));\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <TextField\r\n          fullWidth\r\n          id=\"firstname\"\r\n          name=\"firstname\"\r\n          label=\"firstname\"\r\n          value={formik.values.firstname}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.email && Boolean(formik.errors.email)}\r\n          helperText={formik.touched.email && formik.errors.email}\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          id=\"lastname\"\r\n          name=\"lastname\"\r\n          label=\"lastname\"\r\n          value={formik.values.lastname}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.email && Boolean(formik.errors.email)}\r\n          helperText={formik.touched.email && formik.errors.email}\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          id=\"password\"\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          value={formik.values.password}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.password && Boolean(formik.errors.password)}\r\n          helperText={formik.touched.password && formik.errors.password}\r\n        />\r\n        <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default Register;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}