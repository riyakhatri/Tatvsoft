{"ast":null,"code":"import request from \"./request\";\nconst ENDPOINT = \"api/user\";\nconst getAllUsers = async params => {\n  const url = `${ENDPOINT}`;\n  return request.get(url, {\n    params\n  }).then(res => {\n    return res;\n  });\n};\nconst getAllRoles = async () => {\n  const url = `${ENDPOINT}/roles`;\n  return request.get(url).then(res => {\n    return res;\n  });\n};\nconst getById = async id => {\n  const url = `${ENDPOINT}/byId?id=${id}`;\n  return request.get(url).then(res => {\n    return res;\n  });\n};\nconst deleteUser = async id => {\n  const url = `${ENDPOINT}/Delete?id=${id}`;\n  return request.delete(url).then(res => {\n    console.log(res);\n    return res;\n  });\n};\nconst update = async data => {\n  const url = `${ENDPOINT}`;\n  return request.put(url, data).then(res => {\n    return res;\n  });\n};\nconst updateProfile = async data => {\n  const url = `${ENDPOINT}`;\n  return request.put(url, data).then(res => {\n    return res;\n  });\n};\nconst userService = {\n  getAllUsers,\n  getAllRoles,\n  getById,\n  deleteUser,\n  update,\n  updateProfile\n};\nexport default userService;","map":{"version":3,"names":["request","ENDPOINT","getAllUsers","params","url","get","then","res","getAllRoles","getById","id","deleteUser","delete","console","log","update","data","put","updateProfile","userService"],"sources":["R:/React/hello-app/Tatvsoft/src/service/user.service.js"],"sourcesContent":["import request from \"./request\";\r\n\r\nconst ENDPOINT = \"api/user\";\r\n\r\nconst getAllUsers = async (params) => {\r\n  const url = `${ENDPOINT}`;\r\n  return request.get(url, { params }).then((res) => {\r\n    return res;\r\n  });\r\n};\r\n\r\nconst getAllRoles = async () => {\r\n  const url = `${ENDPOINT}/roles`;\r\n  return request.get(url).then((res) => {\r\n    return res;\r\n  });\r\n};\r\n\r\nconst getById = async (id) => {\r\n  const url = `${ENDPOINT}/byId?id=${id}`;\r\n  return request.get(url).then((res) => {\r\n    return res;\r\n  });\r\n};\r\n\r\nconst deleteUser = async (id) => {\r\n  const url = `${ENDPOINT}/Delete?id=${id}`;\r\n  return request.delete(url).then((res) => {\r\n    console.log(res);\r\n    return res;\r\n  });\r\n};\r\n\r\nconst update = async (data) => {\r\n  const url = `${ENDPOINT}`;\r\n  return request.put(url, data).then((res) => {\r\n    return res;\r\n  });\r\n};\r\n\r\nconst updateProfile = async (data) => {\r\n  const url = `${ENDPOINT}`;\r\n  return request.put(url, data).then((res) => {\r\n    return res;\r\n  });\r\n};\r\n\r\nconst userService = {\r\n  getAllUsers,\r\n  getAllRoles,\r\n  getById,\r\n  deleteUser,\r\n  update,\r\n  updateProfile,\r\n};\r\n\r\nexport default userService;\r\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,WAAW;AAE/B,MAAMC,QAAQ,GAAG,UAAU;AAE3B,MAAMC,WAAW,GAAG,MAAOC,MAAM,IAAK;EACpC,MAAMC,GAAG,GAAI,GAAEH,QAAS,EAAC;EACzB,OAAOD,OAAO,CAACK,GAAG,CAACD,GAAG,EAAE;IAAED;EAAO,CAAC,CAAC,CAACG,IAAI,CAAEC,GAAG,IAAK;IAChD,OAAOA,GAAG;EACZ,CAAC,CAAC;AACJ,CAAC;AAED,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EAC9B,MAAMJ,GAAG,GAAI,GAAEH,QAAS,QAAO;EAC/B,OAAOD,OAAO,CAACK,GAAG,CAACD,GAAG,CAAC,CAACE,IAAI,CAAEC,GAAG,IAAK;IACpC,OAAOA,GAAG;EACZ,CAAC,CAAC;AACJ,CAAC;AAED,MAAME,OAAO,GAAG,MAAOC,EAAE,IAAK;EAC5B,MAAMN,GAAG,GAAI,GAAEH,QAAS,YAAWS,EAAG,EAAC;EACvC,OAAOV,OAAO,CAACK,GAAG,CAACD,GAAG,CAAC,CAACE,IAAI,CAAEC,GAAG,IAAK;IACpC,OAAOA,GAAG;EACZ,CAAC,CAAC;AACJ,CAAC;AAED,MAAMI,UAAU,GAAG,MAAOD,EAAE,IAAK;EAC/B,MAAMN,GAAG,GAAI,GAAEH,QAAS,cAAaS,EAAG,EAAC;EACzC,OAAOV,OAAO,CAACY,MAAM,CAACR,GAAG,CAAC,CAACE,IAAI,CAAEC,GAAG,IAAK;IACvCM,OAAO,CAACC,GAAG,CAACP,GAAG,CAAC;IAChB,OAAOA,GAAG;EACZ,CAAC,CAAC;AACJ,CAAC;AAED,MAAMQ,MAAM,GAAG,MAAOC,IAAI,IAAK;EAC7B,MAAMZ,GAAG,GAAI,GAAEH,QAAS,EAAC;EACzB,OAAOD,OAAO,CAACiB,GAAG,CAACb,GAAG,EAAEY,IAAI,CAAC,CAACV,IAAI,CAAEC,GAAG,IAAK;IAC1C,OAAOA,GAAG;EACZ,CAAC,CAAC;AACJ,CAAC;AAED,MAAMW,aAAa,GAAG,MAAOF,IAAI,IAAK;EACpC,MAAMZ,GAAG,GAAI,GAAEH,QAAS,EAAC;EACzB,OAAOD,OAAO,CAACiB,GAAG,CAACb,GAAG,EAAEY,IAAI,CAAC,CAACV,IAAI,CAAEC,GAAG,IAAK;IAC1C,OAAOA,GAAG;EACZ,CAAC,CAAC;AACJ,CAAC;AAED,MAAMY,WAAW,GAAG;EAClBjB,WAAW;EACXM,WAAW;EACXC,OAAO;EACPE,UAAU;EACVI,MAAM;EACNG;AACF,CAAC;AAED,eAAeC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}