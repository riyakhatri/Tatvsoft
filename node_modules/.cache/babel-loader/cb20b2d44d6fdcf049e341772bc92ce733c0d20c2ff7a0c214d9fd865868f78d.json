{"ast":null,"code":"var _jsxFileName = \"R:\\\\React\\\\hello-app\\\\Tatvsoft\\\\src\\\\pages\\\\EditUser.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport userService from \"../service/user.service\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuthContext } from \"../context/auth\";\nimport { useParams } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { toast } from \"react-toastify\";\nimport { Form, Formik } from \"formik\";\nimport { Grid } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EditUser() {\n  _s();\n  const authContext = useAuthContext();\n  const [roles, setRoles] = useState([]);\n  const [user, setUser] = useState();\n  const navigate = useNavigate();\n  const initialValues = {\n    id: 0,\n    email: \"\",\n    lastName: \"\",\n    firstName: \"\",\n    roleId: 3\n  };\n  useEffect(() => {\n    if (user && roles.length) {\n      var _roles$find;\n      const roleId = (_roles$find = roles.find(role => role.name === (user === null || user === void 0 ? void 0 : user.role))) === null || _roles$find === void 0 ? void 0 : _roles$find.id;\n      setInitialValueState({\n        id: user.id,\n        email: user.email,\n        lastName: user.lastName,\n        firstName: user.firstName,\n        roleId,\n        password: user.password\n      });\n    }\n  }, [user, roles]);\n  const [initialValueState, setInitialValueState] = useState(initialValues);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    getRoles();\n  }, []);\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email(\"Invalid email address format\").required(\"Email is required\"),\n    firstName: Yup.string().required(\"First Name is required\"),\n    lastName: Yup.string().required(\"Last Name is required\"),\n    firstName: Yup.number().required(\"Role is required\")\n  });\n  const onSubmit = values => {\n    const updateValue = {\n      ...values,\n      role: roles.find(r => r.id === values.roleId).name\n    };\n    userService.update(updateValue).then(res => {\n      if (res) {\n        toast.success(\"User update sucessfully\");\n        navigate(\"/user\");\n      }\n    }).catch(e => toast.error(\"User update failed\"));\n  };\n  useEffect(() => {\n    if (id) {\n      getUserById();\n    }\n  }, [id]);\n  const getRoles = () => {\n    userService.getAllRoles().then(res => {\n      if (res) {\n        setRoles(res);\n      }\n    });\n  };\n  const getUserById = () => {\n    userService.getById(Number(id)).then(res => {\n      if (res) {\n        setUser(res);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          align: \"center\",\n          style: {\n            marginBottom: 25,\n            marginTop: 50\n          },\n          children: \"Edit User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n          children: /*#__PURE__*/_jsxDEV(\"hr\", {\n            style: {\n              background: \"red\",\n              color: \"red\",\n              borderColor: \"red\",\n              height: \"4px\",\n              marginInline: \"30px\",\n              width: \"200px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          children: _ref => {\n            let {\n              values,\n              errors,\n              touched,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              setFieldError,\n              setFieldValue\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: handleSubmit,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                direction: \"column\",\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  direction: \"row\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EditUser, \"WjJ+6BQczYQm3IMBK3PqfzazPr8=\", false, function () {\n  return [useAuthContext, useNavigate, useParams];\n});\n_c = EditUser;\nexport default EditUser;\nvar _c;\n$RefreshReg$(_c, \"EditUser\");","map":{"version":3,"names":["React","useState","useEffect","userService","useNavigate","useAuthContext","useParams","Yup","toast","Form","Formik","Grid","jsxDEV","_jsxDEV","Fragment","_Fragment","EditUser","_s","authContext","roles","setRoles","user","setUser","navigate","initialValues","id","email","lastName","firstName","roleId","length","_roles$find","find","role","name","setInitialValueState","password","initialValueState","getRoles","validationSchema","object","shape","string","required","number","onSubmit","values","updateValue","r","update","then","res","success","catch","e","error","getUserById","getAllRoles","getById","Number","children","align","style","marginBottom","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","background","color","borderColor","height","marginInline","width","_ref","errors","touched","handleBlur","handleChange","handleSubmit","setFieldError","setFieldValue","direction","_c","$RefreshReg$"],"sources":["R:/React/hello-app/Tatvsoft/src/pages/EditUser.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport userService from \"../service/user.service\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuthContext } from \"../context/auth\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { Grid } from \"@mui/material\";\r\n\r\nfunction EditUser() {\r\n  const authContext = useAuthContext();\r\n  const [roles, setRoles] = useState([]);\r\n  const [user, setUser] = useState();\r\n  const navigate = useNavigate();\r\n  const initialValues = {\r\n    id: 0,\r\n    email: \"\",\r\n    lastName: \"\",\r\n    firstName: \"\",\r\n    roleId: 3,\r\n  };\r\n  useEffect(() => {\r\n    if (user && roles.length) {\r\n      const roleId = roles.find((role) => role.name === user?.role)?.id;\r\n      setInitialValueState({\r\n        id: user.id,\r\n        email: user.email,\r\n        lastName: user.lastName,\r\n        firstName: user.firstName,\r\n        roleId,\r\n        password: user.password,\r\n      });\r\n    }\r\n  }, [user, roles]);\r\n  const [initialValueState, setInitialValueState] = useState(initialValues);\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    getRoles();\r\n  }, []);\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .email(\"Invalid email address format\")\r\n      .required(\"Email is required\"),\r\n    firstName: Yup.string().required(\"First Name is required\"),\r\n    lastName: Yup.string().required(\"Last Name is required\"),\r\n    firstName: Yup.number().required(\"Role is required\"),\r\n  });\r\n  const onSubmit = (values) => {\r\n    const updateValue = {\r\n      ...values,\r\n      role: roles.find((r) => r.id === values.roleId).name,\r\n    };\r\n    userService\r\n      .update(updateValue)\r\n      .then((res) => {\r\n        if (res) {\r\n          toast.success(\"User update sucessfully\");\r\n          navigate(\"/user\");\r\n        }\r\n      })\r\n      .catch((e) => toast.error(\"User update failed\"));\r\n  };\r\n  useEffect(() => {\r\n    if (id) {\r\n      getUserById();\r\n    }\r\n  }, [id]);\r\n  const getRoles = () => {\r\n    userService.getAllRoles().then((res) => {\r\n      if (res) {\r\n        setRoles(res);\r\n      }\r\n    });\r\n  };\r\n  const getUserById = () => {\r\n    userService.getById(Number(id)).then((res) => {\r\n      if (res) {\r\n        setUser(res);\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <div>\r\n        <h1 align=\"center\" style={{ marginBottom: 25, marginTop: 50 }}>\r\n            Edit User\r\n          </h1>\r\n          <center>\r\n            <hr\r\n              style={{\r\n                background: \"red\",\r\n                color: \"red\",\r\n                borderColor: \"red\",\r\n                height: \"4px\",\r\n                marginInline: \"30px\",\r\n                width: \"200px\",\r\n              }}\r\n            />\r\n          </center>\r\n          <Formik>\r\n            {({\r\n              values,\r\n              errors,\r\n              touched,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n\r\n              setFieldError,\r\n              setFieldValue,\r\n            })=>\r\n            (\r\n              <Form onSubmit={handleSubmit}>\r\n                <Grid direction=\"column\">\r\n                  <Grid direction=\"row\"></Grid>\r\n                </Grid>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default EditUser;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}