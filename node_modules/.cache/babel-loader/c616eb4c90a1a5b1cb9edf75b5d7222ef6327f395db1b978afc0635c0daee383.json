{"ast":null,"code":"var _jsxFileName = \"R:\\\\React\\\\hello-app\\\\Tatvsoft\\\\src\\\\pages\\\\EditUser.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useParams, useEffect } from \"react\";\nimport * as Yup from \"yup\";\nimport { useAuthContext } from \"../context/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport userService from \"../service/user.service\";\nimport { toast } from \"react-toastify\";\nimport { Grid, TextField, Button } from \"@mui/material\";\nimport { Formik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EditUser() {\n  _s();\n  const authContext = useAuthContext();\n  const [roles, setRoles] = useState([]);\n  const [user, setUser] = useState();\n  const navigate = useNavigate();\n  const initialValues = {\n    id: 0,\n    email: \"\",\n    lastName: \"\",\n    firstName: \"\",\n    roleId: 3\n  };\n  const [initialValueState, setInitialValueState] = useState(initialValues);\n  const {\n    id\n  } = useParams();\n  //   useEffect(()=>{\n  //     getRoles();\n  //   },[]);\n  //   useEffect(()=>{\n  //     if(id){\n  //         getUserById();\n  //     }\n  //   },[id]);\n  useEffect(() => {\n    if (user && roles.length) {\n      var _roles$find;\n      const roleId = (_roles$find = roles.find(role => role.name === (user === null || user === void 0 ? void 0 : user.role))) === null || _roles$find === void 0 ? void 0 : _roles$find.id;\n      setInitialValueState({\n        id: user.id,\n        email: user.email,\n        lastName: user.lastName,\n        firstName: user.firstName,\n        roleId,\n        password: user.password\n      });\n    }\n  }, [user, roles]);\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email(\"Invalid email address format\").required(\"Email is required\"),\n    firstName: Yup.string().required(\"First Name is required\"),\n    lastName: Yup.string().required(\"Last Name is required\"),\n    firstName: Yup.number().required(\"Role is required\")\n  });\n  const getRoles = () => {\n    userService.getAllRoles().then(res => {\n      if (res) {\n        setRoles(res);\n      }\n    });\n  };\n  const getUserById = () => {\n    userService.getById(Number(id)).then(res => {\n      if (res) {\n        setUser(res);\n      }\n    });\n  };\n  const onSubmit = values => {\n    const updateValue = {\n      ...values,\n      role: roles.find(r => r.id === values.roleId).name\n    };\n    userService.update(updateValue).then(res => {\n      if (res) {\n        toast.success(\"User update sucessfully\");\n        navigate('/user');\n      }\n    }).catch(e => toast.error(\"User update failed\"));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          align: \"center\",\n          style: {\n            marginBottom: 25,\n            marginTop: 50\n          },\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n          children: /*#__PURE__*/_jsxDEV(\"hr\", {\n            style: {\n              background: \"red\",\n              color: \"red\",\n              borderColor: \"red\",\n              height: \"4px\",\n              marginInline: \"30px\",\n              width: \"200px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EditUser, \"ufesqD7dHBJFVILyPgrERFDT1+Y=\", false, function () {\n  return [useAuthContext, useNavigate, useParams];\n});\n_c = EditUser;\nexport default EditUser;\nvar _c;\n$RefreshReg$(_c, \"EditUser\");","map":{"version":3,"names":["React","useState","useParams","useEffect","Yup","useAuthContext","useNavigate","userService","toast","Grid","TextField","Button","Formik","jsxDEV","_jsxDEV","Fragment","_Fragment","EditUser","_s","authContext","roles","setRoles","user","setUser","navigate","initialValues","id","email","lastName","firstName","roleId","initialValueState","setInitialValueState","length","_roles$find","find","role","name","password","validationSchema","object","shape","string","required","number","getRoles","getAllRoles","then","res","getUserById","getById","Number","onSubmit","values","updateValue","r","update","success","catch","e","error","children","className","align","style","marginBottom","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","background","color","borderColor","height","marginInline","width","_c","$RefreshReg$"],"sources":["R:/React/hello-app/Tatvsoft/src/pages/EditUser.jsx"],"sourcesContent":["import React, { useState ,useParams, useEffect} from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { useAuthContext } from \"../context/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport userService from \"../service/user.service\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Grid,TextField ,Button} from \"@mui/material\";\r\nimport { Formik } from \"formik\";\r\n\r\n\r\nfunction EditUser(){\r\n    const authContext=useAuthContext();\r\n    const [roles,setRoles]=useState([]);\r\n    const [user,setUser]=useState();\r\n    const navigate=useNavigate();\r\n    const initialValues = {\r\n        id:0,\r\n        email:\"\",\r\n        lastName:\"\",\r\n        firstName:\"\",\r\n        roleId:3,\r\n      };\r\n      const [initialValueState, setInitialValueState] = useState(initialValues);\r\n      const { id } = useParams();\r\n    //   useEffect(()=>{\r\n    //     getRoles();\r\n    //   },[]);\r\n    //   useEffect(()=>{\r\n    //     if(id){\r\n    //         getUserById();\r\n    //     }\r\n    //   },[id]);\r\n      useEffect(()=>{\r\n        if(user && roles.length){\r\n            const roleId=roles.find((role)=>role.name===user?.role)?.id;\r\n            setInitialValueState({\r\n                id:user.id,\r\n                email:user.email,\r\n                lastName:user.lastName,\r\n                firstName:user.firstName,\r\n                roleId,\r\n                password:user.password,\r\n            });\r\n        }\r\n      },[user,roles]);\r\n\r\n      const validationSchema=Yup.object().shape({\r\n        email:Yup.string().email(\"Invalid email address format\").required(\"Email is required\"),\r\n        firstName:Yup.string().required(\"First Name is required\"),\r\n        lastName:Yup.string().required(\"Last Name is required\"),\r\n        firstName:Yup.number().required(\"Role is required\"),\r\n      });\r\n\r\n      const getRoles=()=>{\r\n        userService.getAllRoles().then((res)=>{\r\n            if(res){\r\n                setRoles(res);\r\n            }\r\n        });\r\n      };\r\n      const getUserById=()=>{\r\n        userService.getById(Number(id)).then((res)=>{\r\n            if(res){\r\n                setUser(res);\r\n            }\r\n        });\r\n      };\r\n\r\n      const onSubmit=(values)=>{\r\n        const updateValue={\r\n            ...values,\r\n            role:roles.find((r)=>r.id===values.roleId).name,\r\n        };\r\n        userService.update(updateValue).then((res)=>{\r\n            if(res){\r\n                toast.success(\"User update sucessfully\");\r\n                navigate('/user');\r\n            }\r\n        }).catch((e)=>toast.error(\"User update failed\"));\r\n      };\r\n\r\n    \r\n    return(\r\n        <>\r\n      <div className=\"editWrapper\">\r\n        <div className=\"container\">\r\n          <h1 align=\"center\" style={{ marginBottom: 25, marginTop: 50 }}>\r\n            Edit\r\n          </h1>\r\n\r\n          <center>\r\n            <hr\r\n              style={{\r\n                background: \"red\",\r\n                color: \"red\",\r\n                borderColor: \"red\",\r\n                height: \"4px\",\r\n                marginInline: \"30px\",\r\n                width: \"200px\",\r\n              }}\r\n            />\r\n          </center>\r\n         \r\n        </div>\r\n      </div>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default EditUser;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}