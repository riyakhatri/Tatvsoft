{"ast":null,"code":"var _jsxFileName = \"R:\\\\React\\\\hello-app\\\\Tatvsoft\\\\src\\\\pages\\\\EditUser.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState ,useParams, useEffect} from \"react\";\n// import * as Yup from \"yup\";\n// import { useAuthContext } from \"../context/auth\";\n// import { useNavigate } from \"react-router-dom\";\n// import userService from \"../service/user.service\";\n// import { toast } from \"react-toastify\";\n// import { Grid,TextField ,Button} from \"@mui/material\";\n// import { Formik } from \"formik\";\n\n// function EditUser(){\n\n//       const validationSchema=Yup.object().shape({\n//         email:Yup.string().email(\"Invalid email address format\").required(\"Email is required\"),\n//         firstName:Yup.string().required(\"First Name is required\"),\n//         lastName:Yup.string().required(\"Last Name is required\"),\n//         firstName:Yup.number().required(\"Role is required\"),\n//       });\n\n//       const onSubmit=(values)=>{\n//         const updateValue={\n//             ...values,\n//             role:roles.find((r)=>r.id===values.roleId).name,\n//         };\n//         userService.update(updateValue).then((res)=>{\n//             if(res){\n//                 toast.success(\"User update sucessfully\");\n//                 navigate('/user');\n//             }\n//         }).catch((e)=>toast.error(\"User update failed\"));\n//       };\n\nimport React, { useState, useEffect } from \"react\";\nimport userService from \"../service/user.service\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuthContext } from \"../context/auth\";\nimport { useParams } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EditUser() {\n  _s();\n  const authContext = useAuthContext();\n  const [roles, setRoles] = useState([]);\n  const [user, setUser] = useState();\n  const navigate = useNavigate();\n  const initialValues = {\n    id: 0,\n    email: \"\",\n    lastName: \"\",\n    firstName: \"\",\n    roleId: 3\n  };\n  useEffect(() => {\n    if (user && roles.length) {\n      var _roles$find;\n      const roleId = (_roles$find = roles.find(role => role.name === (user === null || user === void 0 ? void 0 : user.role))) === null || _roles$find === void 0 ? void 0 : _roles$find.id;\n      setInitialValueState({\n        id: user.id,\n        email: user.email,\n        lastName: user.lastName,\n        firstName: user.firstName,\n        roleId,\n        password: user.password\n      });\n    }\n  }, [user, roles]);\n  const [initialValueState, setInitialValueState] = useState(initialValues);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    getRoles();\n  }, []);\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email(\"Invalid email address format\").required(\"Email is required\"),\n    firstName: Yup.string().required(\"First Name is required\"),\n    lastName: Yup.string().required(\"Last Name is required\"),\n    firstName: Yup.number().required(\"Role is required\")\n  });\n  const onSubmit = values => {\n    const updateValue = {\n      ...values,\n      role: roles.find(r => r.id === values.roleId).name\n    };\n    userService.update(updateValue).then(res => {\n      if (res) {\n        toast.success(\"User update sucessfully\");\n        navigate('/user');\n      }\n    }).catch(e => toast.error(\"User update failed\"));\n  };\n  useEffect(() => {\n    if (id) {\n      getUserById();\n    }\n  }, [id]);\n  const getRoles = () => {\n    userService.getAllRoles().then(res => {\n      if (res) {\n        setRoles(res);\n      }\n    });\n  };\n  const getUserById = () => {\n    userService.getById(Number(id)).then(res => {\n      if (res) {\n        setUser(res);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(EditUser, \"D+jDhxkQztqiMbGu2LncGdoBnEg=\", false, function () {\n  return [useAuthContext, useNavigate, useParams];\n});\n_c = EditUser;\nexport default EditUser;\nvar _c;\n$RefreshReg$(_c, \"EditUser\");","map":{"version":3,"names":["React","useState","useEffect","userService","useNavigate","useAuthContext","useParams","Yup","jsxDEV","_jsxDEV","Fragment","_Fragment","EditUser","_s","authContext","roles","setRoles","user","setUser","navigate","initialValues","id","email","lastName","firstName","roleId","length","_roles$find","find","role","name","setInitialValueState","password","initialValueState","getRoles","validationSchema","object","shape","string","required","number","onSubmit","values","updateValue","r","update","then","res","toast","success","catch","e","error","getUserById","getAllRoles","getById","Number","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["R:/React/hello-app/Tatvsoft/src/pages/EditUser.jsx"],"sourcesContent":["// import React, { useState ,useParams, useEffect} from \"react\";\r\n// import * as Yup from \"yup\";\r\n// import { useAuthContext } from \"../context/auth\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import userService from \"../service/user.service\";\r\n// import { toast } from \"react-toastify\";\r\n// import { Grid,TextField ,Button} from \"@mui/material\";\r\n// import { Formik } from \"formik\";\r\n\r\n\r\n// function EditUser(){\r\n\r\n\r\n\r\n\r\n//       const validationSchema=Yup.object().shape({\r\n//         email:Yup.string().email(\"Invalid email address format\").required(\"Email is required\"),\r\n//         firstName:Yup.string().required(\"First Name is required\"),\r\n//         lastName:Yup.string().required(\"Last Name is required\"),\r\n//         firstName:Yup.number().required(\"Role is required\"),\r\n//       });\r\n\r\n\r\n\r\n//       const onSubmit=(values)=>{\r\n//         const updateValue={\r\n//             ...values,\r\n//             role:roles.find((r)=>r.id===values.roleId).name,\r\n//         };\r\n//         userService.update(updateValue).then((res)=>{\r\n//             if(res){\r\n//                 toast.success(\"User update sucessfully\");\r\n//                 navigate('/user');\r\n//             }\r\n//         }).catch((e)=>toast.error(\"User update failed\"));\r\n//       };\r\n\r\n    \r\n\r\nimport React,{useState,useEffect} from \"react\";\r\nimport userService from \"../service/user.service\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuthContext } from \"../context/auth\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nfunction EditUser(){\r\n  const authContext=useAuthContext();\r\n    const [roles,setRoles]=useState([]);\r\n    const [user,setUser]=useState();\r\n    const navigate=useNavigate();\r\n    const initialValues = {\r\n        id:0,\r\n        email:\"\",\r\n        lastName:\"\",\r\n        firstName:\"\",\r\n        roleId:3,\r\n      };\r\n      useEffect(()=>{\r\n                if(user && roles.length){\r\n                    const roleId=roles.find((role)=>role.name===user?.role)?.id;\r\n                    setInitialValueState({\r\n                        id:user.id,\r\n                        email:user.email,\r\n                        lastName:user.lastName,\r\n                        firstName:user.firstName,\r\n                        roleId,\r\n                        password:user.password,\r\n                    });\r\n                }\r\n              },[user,roles]);\r\n      const [initialValueState, setInitialValueState] = useState(initialValues);\r\n            const { id } = useParams();\r\n               useEffect(()=>{\r\n        getRoles();\r\n      },[]);\r\n      const validationSchema=Yup.object().shape({\r\n                email:Yup.string().email(\"Invalid email address format\").required(\"Email is required\"),\r\n                firstName:Yup.string().required(\"First Name is required\"),\r\n                lastName:Yup.string().required(\"Last Name is required\"),\r\n                firstName:Yup.number().required(\"Role is required\"),\r\n              });\r\n                    const onSubmit=(values)=>{\r\n        const updateValue={\r\n            ...values,\r\n            role:roles.find((r)=>r.id===values.roleId).name,\r\n        };\r\n        userService.update(updateValue).then((res)=>{\r\n            if(res){\r\n                toast.success(\"User update sucessfully\");\r\n                navigate('/user');\r\n            }\r\n        }).catch((e)=>toast.error(\"User update failed\"));\r\n      };\r\n      useEffect(()=>{\r\n        if(id){\r\n            getUserById();\r\n        }\r\n      },[id]);\r\n      const getRoles=()=>{\r\n                userService.getAllRoles().then((res)=>{\r\n                    if(res){\r\n                        setRoles(res);\r\n                    }\r\n                });\r\n              };\r\n              const getUserById=()=>{\r\n                userService.getById(Number(id)).then((res)=>{\r\n                    if(res){\r\n                        setUser(res);\r\n                    }\r\n                });\r\n              };\r\n  return(\r\n    <>\r\n    <h1>User Edit</h1>\r\n    </>\r\n  );\r\n}\r\nexport default EditUser;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}