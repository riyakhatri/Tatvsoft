{"ast":null,"code":"var _jsxFileName = \"R:\\\\React\\\\hello-app\\\\Tatvsoft\\\\src\\\\pages\\\\Register.jsx\";\nimport React from \"react\";\nimport { Formik, Form } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Register() {\n  const validate = Yup.object({\n    firstName: Yup.String().max(15, 'Must be 15 characters or less').required('Required'),\n    lastName: Yup.String().max(20, 'Must be 15 characters or less').required('Required'),\n    email: Yup.String().email('email is invalid').required('Email is Required'),\n    password: Yup.String().min(6, 'Password must be at least 6 characters').required('Password is Required'),\n    confirmPassword: Yup.String().oneOf([Yup.ref('Password'), null], 'Password must match').required('Confirm password is Required')\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login or Create an Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        firstName: \"\",\n        LastName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-basic\",\n            label: \"Outlined\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"filled-basic\",\n            label: \"Filled\",\n            variant: \"filled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"standard-basic\",\n            label: \"Standard\",\n            variant: \"standard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            className: \"btn btn-default\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","Formik","Form","jsxDEV","_jsxDEV","Fragment","_Fragment","Register","validate","Yup","object","firstName","String","max","required","lastName","email","password","min","confirmPassword","oneOf","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","LastName","TextField","id","label","variant","Button","className","_c","$RefreshReg$"],"sources":["R:/React/hello-app/Tatvsoft/src/pages/Register.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Formik,Form } from \"formik\";\r\n export function Register() {\r\n    const validate=Yup.object({\r\n        firstName:Yup.String().max(15,'Must be 15 characters or less').required('Required'),\r\n        lastName:Yup.String().max(20,'Must be 15 characters or less').required('Required'),\r\n        email:Yup.String().email('email is invalid').required('Email is Required'),\r\n        password:Yup.String().min(6,'Password must be at least 6 characters').required('Password is Required'),\r\n        confirmPassword:Yup.String().oneOf([Yup.ref('Password'),null],'Password must match').required('Confirm password is Required'),\r\n    })\r\n    return(\r\n    <>\r\n    <h1>Login or Create an Account</h1>\r\n    <Formik initialValues={{\r\n        firstName:\"\",\r\n        LastName:\"\",\r\n        email:\"\",\r\n        password:\"\",\r\n        confirmPassword:\"\"\r\n    }}>\r\n    \r\n    <div>\r\n        <Form>\r\n            <TextField id=\"outlined-basic\" label=\"Outlined\" variant=\"outlined\" />\r\n            <TextField id=\"filled-basic\" label=\"Filled\" variant=\"filled\" />\r\n            <TextField id=\"standard-basic\" label=\"Standard\" variant=\"standard\" />\r\n            <Button variant=\"contained\" className=\"btn btn-default\">\r\n            Register\r\n            </Button>\r\n        </Form>\r\n    </div>\r\n\r\n    </Formik>\r\n    </>\r\n    );\r\n}\r\nexport default Register;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}